server:
  port: 8080
  shutdown: graceful

spring:
  main.banner-mode: 'off'
  profiles.active: default
  flyway.enabled: true
  datasource:
    url: "jdbc:postgresql://${NAIS_DATABASE_FLEX_SYKETILFELLE_FLEX_SYKETILFELLE_DB_HOST}:${NAIS_DATABASE_FLEX_SYKETILFELLE_FLEX_SYKETILFELLE_DB_PORT}/${NAIS_DATABASE_FLEX_SYKETILFELLE_FLEX_SYKETILFELLE_DB_DATABASE}?reWriteBatchedInserts=true"
    username: ${NAIS_DATABASE_FLEX_SYKETILFELLE_FLEX_SYKETILFELLE_DB_USERNAME}
    password: ${NAIS_DATABASE_FLEX_SYKETILFELLE_FLEX_SYKETILFELLE_DB_PASSWORD}
    hikari:
      minimum-idle: 1
      maximum-pool-size: 3

management:
  endpoint:
    prometheus.enabled: true
    health.probes.enabled: true
  endpoints.web:
    base-path: /internal
    exposure.include: health, prometheus
  health:
    livenessstate.enabled: true
    readinessState.enabled: true
  metrics.export.prometheus.enabled: true

logging.config: "classpath:logback.xml"

no.nav.security.jwt:
  client:
    registration:
      pdl-api-client-credentials:
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: api://${PDL_API_AAD_CLIENT_ID}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
  issuer:
    azureator:
      discoveryurl: ${AZURE_APP_WELL_KNOWN_URL}
      accepted_audience: ${AZURE_APP_CLIENT_ID}
    tokenx:
      discoveryurl: ${TOKEN_X_WELL_KNOWN_URL}
      accepted_audience: ${TOKEN_X_CLIENT_ID}

aiven-kafka:
  auto-offset-reset: none
  security-protocol: SSL

